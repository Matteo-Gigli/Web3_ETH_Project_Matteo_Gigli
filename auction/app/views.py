from django.shortcuts import render, redirect, get_object_or_404, reverse
from .models import Customer, Item
from django.contrib import messages
from .forms import NFT, Conversion, TokenOffer
import json
from web3 import Web3
import pymongo

# Using MongoDB Database
myclient = pymongo.MongoClient("mongodb://localhost:27017/")
mydb = myclient["ETH__Project__Web3"]

ganache_url = 'http://127.0.0.1:7545'
w3 = Web3(Web3.HTTPProvider(ganache_url))

#Set first account on ganache as Faucet, so this address have the initial total supply, and is the default address
#from where we receive money when we make a new register, or the address from where we recive the conversion
#from dollar

w3.eth.defaultAccount = w3.eth.accounts[0]
Faucet = w3.eth.defaultAccount


#This is the address where we manage all the auction, and is important because this address give us the oppurtunity
#to send our tokens to a recipient when we make an offer.
#The same recipient will give us back our token if someone make a better offer on the same item

w3.eth.defaultAccount = w3.eth.accounts[1]
Recipient = w3.eth.defaultAccount



# Contact Token ERC721
contractAddress = w3.toChecksumAddress('0xe9642c097B4A681B9A159Ea8270aA1BA6aC15Fee')
abi = json.loads('''[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"AlreadyExist","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"string","name":"tokenUri","type":"string"},{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"name":"Mintable","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"_id","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balances","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"owning","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"sendToken721","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uriDeployed","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}]''')
bytecode = ''
contract = w3.eth.contract(address=contractAddress, abi=abi, bytecode=bytecode)


#Contract Token ERC20
contractAddress20 = w3.toChecksumAddress('0x159fbd9F1F686bf29A9fB357A06545Bea99766F3')
abi20 = json.loads('''[{"inputs":[{"internalType":"uint256","name":"totalSupply","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}]''')
contract20 = w3.eth.contract(address=contractAddress20, abi=abi20)

#We are creating our NFT
def createNft(request):
    customer = Customer.objects.get(user=request.user)
    if request.method == 'POST':
        form = NFT(request.POST, request.FILES)
        if form.is_valid():
            form = form.save(commit=False)
            name = form.name
            symbol = form.symbol
            image = form.image
            bio = form.bio
            itemUrl = form.itemUrl
            creatorAddress = form.creatorAddress
            startingPrice = form.startingPrice
            endingAuction = form.endingAuction

            newItem = Item(
                name=name,
                symbol=symbol,
                image=image,
                bio=bio,
                itemUrl=itemUrl,
                creatorAddress=creatorAddress,
                customer=customer,
                startingPrice=startingPrice,
                endingAuction=endingAuction
            )

#This instruction is made for mint the token to the right address, instead anyone can mint a token for us.

            if newItem.customer.address != creatorAddress:
                messages.error(request, 'You are not the address owner')
                return redirect('/homepage/')

#Minting Our Token ERC721

            txHashForERC721 = contract.functions.Mintable(
                customer.address,
                itemUrl,
                name,
                symbol,
            ).transact({'from': customer.address})
            newItem.itemHash = w3.toHex(txHashForERC721)
            customer.save()
            form.save()

# Populate Database Here
            myColl = mydb['There Is A Minter']
            informationAbout = {
                'Creator': newItem.creatorAddress,
                'Tx Hash': w3.toHex(txHashForERC721)
            }
            populateDatabase = myColl.insert_one(informationAbout)

            messages.success(request, f'''{request.user}...You Minted A New Nft''')
            return redirect('/homepage/')

    else:
        form = NFT()
        context = {'form': form}
        return render(request, 'createNft.html', context)


def profile(request):
    customer = Customer.objects.get(user=request.user)
    customerName = customer.user
    customerAddress = customer.address
    addressTokenBalance = contract20.functions.balanceOf(customerAddress).call()
    tokenBalance = w3.fromWei(addressTokenBalance, 'ether')
    dollarBalance = customer.dollarBalance

    context = {
        'customerName': customerName,
        'customerAddress': customerAddress,
        'tokenBalance': tokenBalance,
        'dollarBalance': dollarBalance
    }
    return render(request, 'profile.html', context)


def showItem(request, pk):
    item = get_object_or_404(Item, pk=pk)
    context = {'item': item}
    return render(request, 'showItem.html', context)


# We can only spend our token ERC20 to make offer, so we want to convert our dollar in token.
# Conversion is 1:1 so 1 token is for 1 dollar


def conversion(request):
    customer = Customer.objects.get(user=request.user)
    if request.method == 'POST':
        form = Conversion(request.POST)
        if form.is_valid():
            form = form.save(commit=False)
            form.dollarBalance = form.dollarBalance

            if form.dollarBalance == 0:
                messages.error(request, 'Cannot convert 0')
                return redirect(reverse('conversion'))

            if form.dollarBalance < 0:
                messages.error(request, 'Cannot convert less than 0')
                return redirect(reverse('conversion'))

            if form.dollarBalance > 0 and customer.dollarBalance >= form.dollarBalance:
                customer.dollarBalance = customer.dollarBalance - float(form.dollarBalance)
                dollarToWei = w3.toWei(form.dollarBalance, 'ether')

                txHashConversion = contract20.functions.transfer(
                    customer.address,
                    dollarToWei
                ).transact({'from': Faucet})

#Populate Database and we have to remember 1 dollar is 1 token

                myColl = mydb['Conversion']
                informationAbout = {
                    'From': Faucet,
                    'Token Amount': form.dollarBalance,
                    'To': customer.address,
                    'TX hash': w3.toHex(txHashConversion),
                }
                populateDatabase = myColl.insert_one(informationAbout)

                customer.save()
                messages.success(request, 'You converted your dollar correctly')
                return redirect('/homepage/')

            else:
                if form.dollarBalance > 0 and customer.dollarBalance < form.dollarBalance:
                    messages.error(request, 'Your funds are not enough!')
                    return redirect('/homepage/')

    else:
        form = Conversion()
        context = {'form': form}
        return render(request, 'conversion.html', context)


#With this function we can find via item name an NFT in our site

def findInSite(request):
    if 'q' in request.GET:
        querystring = request.GET.get('q')
        if len(querystring) == 0:
            return redirect('findInSite')
        item = Item.objects.filter(name__icontains=querystring)
        context = {
            'item': item,
        }
        return render(request, 'findInSite.html', context)

    else:
        return render(request, 'findInSite.html')


#Here we have the function to manage all the offer for an item
def tokenOffer(request, pk):
    customer = Customer.objects.get(user=request.user)
    item = get_object_or_404(Item, pk=pk)
    if request.method == 'POST':
        form = TokenOffer(request.POST)
        if form.is_valid():
            form = form.save(commit=False)
            form.user = customer
            form.tokenOffer = form.tokenOffer

            if form.tokenOffer == 0:
                messages.error(request, 'Cannot offer 0')
                return redirect(reverse(tokenOffer, kwargs={'pk': item.pk}))

            if form.tokenOffer < 0:
                messages.error(request, 'Cannot offer less than 0')
                return redirect(reverse(tokenOffer, kwargs={'pk': item.pk}))

            if form.tokenOffer == float(item.tokenOffer):
                messages.error(request, 'Cannot offer equal to last offer')
                return redirect(reverse(tokenOffer, kwargs={'pk': item.pk}))

            if form.tokenOffer <= float(item.startingPrice):
                messages.error(request, 'Cannot offer less or equal to starting price')
                return redirect(reverse(tokenOffer, kwargs={'pk': item.pk}))

            if customer.tokenBalance >= float(item.startingPrice) and item.tokenOffer > 0.0 and customer.tokenBalance >= item.tokenOffer and customer.tokenBalance >= form.tokenOffer and item.tokenOffer < form.tokenOffer:
                prevCustomer = item.customer
                prevCustomerAddress = prevCustomer.address
                prevOffer = item.tokenOffer

                updateBetterOffer = contract20.functions.transfer(
                    Recipient,
                    w3.toWei(form.tokenOffer, 'ether')
                ).transact({'from': customer.address})

                sendingTokenBack = contract20.functions.transfer(
                    prevCustomerAddress,
                    w3.toWei(prevOffer, 'ether')
                ).transact({'from': Recipient})

                item.customer = customer
                item.tokenOffer = form.tokenOffer
                customer.save()
                item.save()
                messages.success(request, f'''Congrats {request.user} you updated the previous offer!''')
                return redirect('/homepage/')


            else:
                if customer.tokenBalance >= form.tokenOffer and float(item.tokenOffer) == 0 and form.tokenOffer > float(item.startingPrice):
                    txForRecipient = contract20.functions.transfer(
                        Recipient,
                        w3.toWei(form.tokenOffer, 'ether')
                    ).transact({'from': customer.address})
                    item.tokenOffer = form.tokenOffer
                    item.customer = customer
                    customer.save()
                    item.save()
                    messages.success(request, f'''Congrats {request.user}, you open the dance !''')
                    return redirect('/homepage/')

        else:
            messages.error(request, 'Something goes wrong!')
            return redirect('/homepage/')

    else:
        form = TokenOffer()
        context = {'form': form}
        return render(request, 'makeAnOffer.html', context)